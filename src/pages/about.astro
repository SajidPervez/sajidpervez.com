---
import BaseLayout from '../layouts/BaseLayout.astro';
import ExperienceCard from '../components/ExperienceCard.astro';
import Prose from '../components/Prose.astro';
import { getCollection, getEntryBySlug } from 'astro:content';

// Fetch all experiences from the collection
const experiences = await getCollection('experiences');

// Fetch data from authors/about.md
const aboutData = await getEntryBySlug('authors', 'about');

// Render the markdown content from about.md
const { Content: AboutContent } = await aboutData.render();

// Randomly select one of the cover images
const coverImages = aboutData.data.cover || [];
const randomCoverImage = coverImages[Math.floor(Math.random() * coverImages.length)];

// Sort experiences by the start year (descending order)
const sortedExperiences = experiences.sort((a, b) => {
  const yearA = new Date(a.data.startDate).getFullYear();
  const yearB = new Date(b.data.startDate).getFullYear();
  return yearB - yearA; // Descending order
});

// Render the content for all experiences asynchronously
const renderedExperiences = await Promise.all(
  sortedExperiences.map(async (experience) => {
    const { Content } = await experience.render(); // Render the markdown content into a Content component
    return { ...experience, Content }; // Return both the frontmatter and the rendered content
  })
);

const pageTitle = "About Me";
---

<BaseLayout pageTitle={pageTitle}>
  <!-- Two-column section for bio and cover image -->
  <section class="container mx-auto px-4 py-8 grid grid-cols-1 md:grid-cols-2 gap-8 mb-12">
    <!-- First column: Bio content -->
    <div>
      <h2 class="text-4xl font-bold mb-4">{aboutData.data.title}</h2>
      
        <AboutContent />
    </div>
    
    <!-- Second column: Random cover image -->
    <div class="cover-container">
      <img src={randomCoverImage.src} alt="Cover Image" class="rounded-lg shadow-lg w-full h-auto" />
    </div>
  </section>

  <!-- Experience Timeline -->
  <section class="container mx-auto py-8 flex flex-col  gap-8 mb-12">
    {renderedExperiences.map(({ data, Content }) => {
      const startYear = new Date(data.startDate).getFullYear(); // Extract start year
      
      return (
        <div class="experience-item mb-12 flex items-center ">
          <!-- Year and Dot -->
          <div class="year-container flex items-center">
            <div class="year-dot"></div>
            <div class="text-2xl font-bold text-gray-600">{startYear}</div>
          </div>

          <!-- Experience card -->
          <div class="w-full">
            <ExperienceCard
              title={data.title}
              organization={data.organization}
              period={data.period}
              description={data.description}
              cover={data.cover}
              Content={Content}
            />
          </div>
        </div>
      );
    })}
  </section>
</BaseLayout>
